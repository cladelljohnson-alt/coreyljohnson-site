name: Scheduled posts

on:
  schedule:
    - cron: '0 12 * * *'   # 12:00 UTC daily
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: scheduled-posts
  cancel-in-progress: false

env:
  HOMEPAGE_PATH: index.html

jobs:
  publish-scheduled-post:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set git config
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Publish scheduled HTML post
        shell: bash
        run: |
          set -euo pipefail
          drafts_dir="drafts"
          post="$(find "$drafts_dir" -maxdepth 1 -type f -name '*.html' | sort | head -n 1 || true)"
          if [ -z "${post:-}" ]; then
            echo "No draft posts to publish."
            exit 0
          fi
          filename="$(basename "$post")"

          # Extract title + description (robust to newlines)
          compact="$(tr -d '\n' < "$post")"
          title="$(printf '%s' "$compact" | grep -oP '(?<=<title>).*?(?=</title>)' | head -n 1 || true)"
          description="$(printf '%s' "$compact" | grep -oP '(?<=<meta\s+name="description"\s+content=").*?(?=")' | head -n 1 || true)"
          [ -n "$title" ] || title="${filename%.*}"
          [ -n "$description" ] || description="New post: ${title}"

          # Build the blog-card HTML snippet (DARK card)
          cat <<'EOF' > card_snippet.html
<article class="card shadow-lg overflow-hidden p-6 transition duration-300 transform hover:shadow-xl hover:-translate-y-1">
  <h3 class="text-xl font-semibold mb-3">TITLE_PLACEHOLDER</h3>
  <p class="mb-4">DESCRIPTION_PLACEHOLDER</p>
  <a href="FILENAME_PLACEHOLDER" class="font-medium">Read More →</a>
</article>
EOF

          # Inject dynamic values into the snippet
          sed -i "s#TITLE_PLACEHOLDER#$(printf '%s' "$title" | sed 's/[&/]/\\&/g')#" card_snippet.html
          desc_html="$(printf '%s' "$description" | sed -e 's/&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g')"
          sed -i "s#DESCRIPTION_PLACEHOLDER#$(printf '%s' "$desc_html" | sed 's/[&/]/\\&/g')#" card_snippet.html
          sed -i "s#FILENAME_PLACEHOLDER#$(printf '%s' "$filename" | sed 's/[&/]/\\&/g')#" card_snippet.html

      - name: Insert card into homepage (no escaping)
        shell: bash
        run: |
          python3 - <<'PY'
import os, sys
hp = os.environ.get('HOMEPAGE_PATH','index.html')
placeholder = ""
with open('card_snippet.html','r',encoding='utf-8') as f: snip = f.read()
with open(hp,'r',encoding='utf-8') as f: html = f.read()
if placeholder not in html:
    print(f"Placeholder not found in {hp}", file=sys.stderr); sys.exit(1)
html = html.replace(placeholder, snip + "\n" + placeholder, 1)
with open(hp,'w',encoding='utf-8') as f: f.write(html)
print("✅ Inserted card into", hp)
PY

      - name: Move draft to root and commit
        shell: bash
        run: |
          set -euo pipefail
          # The $post variable is not available in this step, so we must find it again
          post_to_move="$(find "drafts" -maxdepth 1 -type f -name '*.html' | sort | head -n 1)"
          if [ -z "${post_to_move:-}" ]; then
            echo "Draft already moved, skipping commit step."
            exit 0
          fi
          filename_to_move="$(basename "$post_to_move")"
          git mv "$post_to_move" "$filename_to_move"
          rm -f card_snippet.html
          git add "$HOMEPAGE_PATH" "$filename_to_move"
          git commit -m "Publish scheduled post: $filename_to_move"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
